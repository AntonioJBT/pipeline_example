##################################################
# Dockerfile for pipeline_example 
# https://github.com/AntonioJBT/pipeline_example
##################################################


############
# Base image
############

#FROM ubuntu
FROM continuumio/miniconda3
# It runs on Debian GNU/Linux 8; use e.g. uname -a ; cat /etc/issue.net

# Or simply run:
# docker run --rm -ti continuumio/miniconda3
# docker run --rm -ti ubuntu

#########
# Contact
#########

MAINTAINER Antonio Berlanga-Taylor <a.berlanga@imperial.ac.uk>

#########################
# Update/install packages
#########################

# Install system dependencies
# Ubuntu base image no longer has tzdata, which requires user interaction if
# not installed first manually here:

# If running on Debian and anaconda/miniconda image, use apt-get:
RUN apt-get update && apt-get install -y \
    apt-utils \
    tzdata \
    wget \
    bzip2 \
    fixincludes \
    unzip \
    vim \
    sudo \
    gcc \
    graphviz \
    inkscape

# Additional packages installed for Ubuntu, taken from CGAT cgat example:
# Probably not needed, didn't test though
#RUN sudo apt-get --quiet install -y gcc g++ \
#    zlib1g-dev libssl-dev libssl1.0.0 libbz2-dev libfreetype6-dev libpng12-dev \
#    libblas-dev libatlas-dev liblapack-dev gfortran libpq-dev r-base-dev \
#    libreadline-dev libmysqlclient-dev libboost-dev libsqlite3-dev


#############################
# Install additional packages
#############################

# Miniconda:
#RUN cd /usr/bin \
#    && wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \
#    && bash Miniconda3-latest-Linux-x86_64.sh -b -p $HOME/miniconda \
#    && export PATH="$HOME/miniconda/bin:$PATH"

# Add conda channels:
RUN conda config --add channels r \
    && conda config --add channels defaults \
    && conda config --add channels conda-forge \
    && conda config --add channels bioconda

# Update conda:
RUN conda update -y conda

# git:
RUN conda install -y git

# PIP:
RUN pip install --upgrade pip pysam cgat \
    && pip list

# Base R:
RUN conda install -y -c r r

# Create an environment for py27:
RUN conda create -y -n py27 python=2.7
#    && source activate py27
#RUN ["/bin/bash" "-c" "source activate py27"]
# Create one for py35, current miniconda runs 3.6 as causes some errors for
# repos below:
RUN conda create -y -n py35 python=3.5

# Mixing RUN with source errors, use instead this form of RUN:
# See:
# https://stackoverflow.com/questions/20635472/using-the-run-instruction-in-a-dockerfile-with-source-does-not-work
# https://docs.docker.com/engine/reference/builder/#run
# https://stackoverflow.com/questions/20635472/using-the-run-instruction-in-a-dockerfile-with-source-does-not-work/45087082#45087082
# RUN /bin/bash -c "source activate py35"


# rpy2 is not in r-essentials, Dockerfile installation with pip errors
RUN conda install -y rpy2

# Install cgat tools, needed for CGATPipeline core:
# https://github.com/CGATOxford/cgat
# This requires py27 at the moment, use pip as above instead.
#RUN conda install cgat-scripts


#########################
# Install package to test
#########################
# Install CGAT core utilities:

RUN cd /home \
    && git clone https://github.com/AntonioJBT/CGATPipeline_core.git \
    && cd CGATPipeline_core \
    && pip install -r requirements.rst \
    && python setup.py install \
    && cd ..

RUN cd /home \
    && git clone https://github.com/AntonioJBT/project_quickstart.git \
    && cd project_quickstart \
    && pip install -r requirements.rst \
    && python setup.py install \
    && cd ..

RUN cd /home \
    && git clone https://github.com/AntonioJBT/pipeline_example.git \
    && cd pipeline_example \
    && pip install -r requirements.rst \
    && python setup.py install \
    && cd ..

###############################
# Install external dependencies
###############################



############################
# Default action to start in
############################
# Only one CMD is read (if several only the last one is executed)

# Set environment variables
# ENV PATH=/shared/conda-install/envs/cgat-devel/bin:$PATH

# Add an entry point to the cgat command
#ENTRYPOINT ["/shared/conda-install/envs/cgat-devel/bin/cgat"]

#CMD echo "Hello world"
CMD ["/bin/bash"]

# Create a shared folder between docker container and host
#VOLUME ["/shared/data"]
